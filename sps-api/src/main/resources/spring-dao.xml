<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.sps" >
		<!-- 用来指定排除某个注解 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>


	<context:property-placeholder location="classpath:properties/dev.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		init-method="init" destroy-method="close" >

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.connectionURL}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.pool.initialSize}" />
		<property name="minIdle" value="${db.pool.minIdle}" />
		<property name="maxActive" value="${db.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.pool.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.pool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${db.pool.validationQuery}" />
		<property name="testWhileIdle" value="${db.pool.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.pool.testOnBorrow}" />
		<property name="testOnReturn" value="${db.pool.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false -->
		<property name="poolPreparedStatements" value="${db.pool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.pool.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<!-- druid配置监控统计拦截的filters -->
		<property name="filters" value="config" />
		<!-- connectProperties属性来打开mergeSql功能 -->
		<!-- <property name="connectionProperties" value="config.decrypt=true" /> -->
	</bean>
	<bean id="sqlSessionFactory" class="com.sps.system.support.PackagesSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描enity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.*.entity"/>
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		  scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sps.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
</beans>