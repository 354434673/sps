<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sqlmap.SpsOrderReturn">
  <resultMap id="BaseResultMap" type="SpsOrderReturn">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="excuse" jdbcType="VARCHAR" property="excuse" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="business_name" jdbcType="VARCHAR" property="businessName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_num, delete_flag, create_time, update_time, reason, excuse, order_time, 
    business_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sps_order_return
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sps_order_return
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="SpsOrderReturn">
    insert into sps_order_return (id, order_num, delete_flag, 
      create_time, update_time, reason, 
      excuse, order_time, business_name
      )
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, 
      #{excuse,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, #{businessName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="SpsOrderReturn">
    insert into sps_order_return
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="excuse != null">
        excuse,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="businessName != null">
        business_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="excuse != null">
        #{excuse,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessName != null">
        #{businessName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="SpsOrderReturn">
    update sps_order_return
    <set>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="excuse != null">
        excuse = #{excuse,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessName != null">
        business_name = #{businessName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="SpsOrderReturn">
    update sps_order_return
    set order_num = #{orderNum,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      reason = #{reason,jdbcType=VARCHAR},
      excuse = #{excuse,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      business_name = #{businessName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findEntityByOrderNo" parameterType="string" resultMap="BaseResultMap">
   select
    r.id, r.order_num, r.delete_flag, r.create_time, r.update_time, r.reason, r.excuse, r.order_time,
    r.business_name,sr.flag as orderStatus
    from sps_order_return r  LEFT JOIN sps_order sr on sr.orderid=r.order_num
    where  r.order_num = #{orderNo,jdbcType=VARCHAR}
  </select>
</mapper>