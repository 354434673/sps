<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
					http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<!-- 启用shrio授权注解拦截方式 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 装配 securityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- 配置登陆页面 -->
		<property name="loginUrl" value="/page/main/login.jsp" />
		<!-- 登陆成功后的一面 -->
		<!-- <property name="successUrl" value="/jsp/index.jsp" /> -->
		<property name="unauthorizedUrl" value="/jsp/unauthorized.jsp" />
		<!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截. -->
		<property name="filterChainDefinitions">
			<value>
				<!-- js/css等文件,暂时全部放行,需要拦截的待定 -->
				/page/static/** = anon
				<!-- 登陆认证放行 -->
				/user/userLogin.html = anon
				<!-- 其余所有全部登陆后可使用 -->
				<!-- /** = authc -->
				/** = anon
				<!-- /user/showUser = anon /index.jsp = anon /jsp/login.jsp = anon /user/**=authc -->
			</value>
		</property>
	</bean>

	<!-- 配置缓存管理器 -->
<!-- 	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
		指定 ehcache 的配置文件
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/> 
	</bean> -->
	
	<!-- 配置securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 认证管理器-->  
		<property name="realm" ref="customerMd5" />
		<!-- 缓存管理器 -->  
       <!--  <property name="cacheManager" ref="cacheManager" />  -->
	</bean>
    
	<!-- 自定义realm -->
	<bean id="customerMd5" class="com.sps.realm.CustmerMd5">
		<!-- 依赖凭证匹配器 -->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>

	<!-- 创建凭证匹配器 -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- 加密方式md5 -->
		<property name="hashAlgorithmName" value="md5" />
		<!-- 散列1024次 -->
		<property name="hashIterations" value="1024" />
	</bean>
	
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>  